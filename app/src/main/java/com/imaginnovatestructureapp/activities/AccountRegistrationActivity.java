package com.imaginnovatestructureapp.activities;import android.app.Activity;import android.content.res.Configuration;import android.graphics.Color;import android.os.Bundle;import android.support.v7.widget.Toolbar;import android.text.Editable;import android.text.TextWatcher;import android.util.Log;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.RelativeLayout;import android.widget.TextView;import com.imaginnovatestructureapp.Controllers.AccountRegistrationController;import com.imaginnovatestructureapp.Listeners.AccountRegistrationListener;import com.imaginnovatestructureapp.R;import com.imaginnovatestructureapp.datamodels.data.ErrorMsg;import com.imaginnovatestructureapp.datamodels.data.Message;import com.imaginnovatestructureapp.network.webservices.ServiceConstants;import java.util.ArrayList;public class AccountRegistrationActivity extends BaseActivity implements AccountRegistrationListener, View.OnClickListener {    Bundle bundle;    EditText et_accountreg_firstname, et_accountreg_lastname,            et_accountreg_email, et_accountreg_street,            et_accountreg_state, et_accountreg_city, et_accountreg_zipcode, current_focussed_edittext;    Button btn_accountreg_submit, btn_accountreg_cancel;    int[] tv_ids;    AccountRegistrationController controller;    //String accountreg_street = "", accountreg_firstname = "", accountreg_state = "", accountreg_city = "", accountreg_lastname = "";    int[] all_ets;    private TextView tv_title_afmandatory;    private TextView tv_accountreg_firstname, tv_accountreg_lastname, tv_accountreg_email,            tv_accountreg_zipcode, tv_accountreg_street, tv_accountreg_city,            tv_accountreg_state;    private int[] all_et_ids;    private RelativeLayout rl_accountreg, rl_accreg_sub;    private int[] comp_fields;    private String[] comp_fields_values;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        //super.setContext(this);        setContentView(R.layout.activity_accountregistration);        initializeViews();        initializeData();        bundle = new Bundle();    }    @Override    protected void onStart() {        super.onStart();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        if (item.getItemId() == android.R.id.home) {            finish();        }        return super.onOptionsItemSelected(item);    }    public void initializeViews() {        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayShowTitleEnabled(true);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        tv_title_afmandatory = (TextView) findViewById(R.id.tv_title_afmandatory);        tv_title_afmandatory.setTextColor(Color.WHITE);        tv_title_afmandatory.setTextSize(12);        tv_title_afmandatory.setVisibility(View.GONE);        et_accountreg_firstname = (EditText) findViewById(R.id.et_accountreg_firstname);        et_accountreg_firstname.requestFocus();        et_accountreg_lastname = (EditText) findViewById(R.id.et_accountreg_lastname);        et_accountreg_email = (EditText) findViewById(R.id.et_accountreg_email);        et_accountreg_zipcode = (EditText) findViewById(R.id.et_accountreg_zipcode);        et_accountreg_zipcode.setRawInputType(Configuration.KEYBOARD_12KEY);        et_accountreg_street = (EditText) findViewById(R.id.et_accountreg_street);        et_accountreg_state = (EditText) findViewById(R.id.et_accreg_state);        et_accountreg_city = (EditText) findViewById(R.id.et_accountreg_city);        btn_accountreg_submit = (Button) findViewById(R.id.btn_accountreg_submit);        btn_accountreg_submit.setOnClickListener(this);        btn_accountreg_cancel = (Button) findViewById(R.id.btn_accountreg_cancel);        btn_accountreg_cancel.setOnClickListener(this);    }    public void initializeData() {        setColorToStatusBar();        controller = new AccountRegistrationController(this);        comp_fields = new int[]{R.id.tv_accountreg_firstname, R.id.tv_accountreg_lastname,                R.id.tv_accountreg_email, R.id.tv_accountreg_street, R.id.tv_accountreg_city, R.id.tv_accountreg_state, R.id.tv_accountreg_zipcode};        comp_fields_values = getResources().getStringArray(R.array.field_names);        for (int i = 0; i < comp_fields.length; i++) {            TextView tv = (TextView) findViewById(comp_fields[i]);            tv.setTextColor(getResources().getColor(R.color.black));        }    }    @Override    public void setResultOnSuccess(int calltype, ArrayList<Message> result) {    }    @Override    public void setResultOnFailure(int calltype, ArrayList<ErrorMsg> result) {    }    @Override    public void setReasonOnError(int calltype, String msg) {    }    @Override    public void onResultReceived(int call, int type) {        btn_accountreg_submit.setEnabled(true);        if (call == ServiceConstants.ACC_REGISTRATION) {            if (type == ServiceConstants.SUCCESS) {                ArrayList<Message> data = hm_success_call_result.get(call);                for (Message m : data) {                    Log.d("FLOW SUCCESS ", m.getMessage());                }                //move to respective activity on success --TODO            } else if (type == ServiceConstants.FAILURE) {                ArrayList<ErrorMsg> data = hm_failure_call_result.get(call);                for (ErrorMsg m : data) {                    Log.d("FLOW FAILURE ", m.getMessage());                }            } else if (type == ServiceConstants.ERROR) {                String resp = hm_error_call_result.get(call);                Log.d("FLOW ERROR:::", resp);            }        }    }    @Override    public Activity getContext() {        return null;    }    @Override    protected void onDestroy() {        super.onDestroy();        hm_error_call_result.clear();        hm_failure_call_result.clear();        hm_success_call_result.clear();    }    @Override    public void onClick(View view) {        if (view == btn_accountreg_submit) {            //validate fields and then            Bundle data = new Bundle();            data.putString(ServiceConstants.firstname, et_accountreg_firstname.getText().toString());            data.putString(ServiceConstants.lastname, et_accountreg_lastname.getText().toString());            data.putString(ServiceConstants.email, et_accountreg_email.getText().toString());            data.putString(ServiceConstants.street, et_accountreg_street.getText().toString());            data.putString(ServiceConstants.city, et_accountreg_city.getText().toString());            data.putString(ServiceConstants.state, et_accountreg_state.getText().toString());            data.putString(ServiceConstants.zipcode, et_accountreg_zipcode.getText().toString());            controller.sendRegisterRequest(data);        } else if (view == btn_accountreg_cancel) {            finish();        }    }    @Override    protected void onStop() {        super.onStop();    }    @Override    public void onBackPressed() {        super.onBackPressed();    }    class ModificationsFinder implements TextWatcher {        EditText editText;        ModificationsFinder(EditText et) {            editText = et;        }        @Override        public void beforeTextChanged(CharSequence s, int start, int count, int after) {        }        @Override        public void onTextChanged(CharSequence s, int start, int before, int count) {            try {                editText.setError(null);            } catch (Exception e) {                Log.e("FLOW_", e.toString());            }        }        @Override        public void afterTextChanged(Editable s) {        }    }}